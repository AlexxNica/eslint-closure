var f="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,d){if(d.get||d.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[b]=d.value)},h="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this;function k(){k=function(){};h.Symbol||(h.Symbol=l)}var m=0;function l(a){return"jscomp_symbol_"+(a||"")+m++}
function n(){k();var a=h.Symbol.iterator;a||(a=h.Symbol.iterator=h.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&f(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return p(this)}});n=function(){}}function p(a){var b=0;return q(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})}function q(a){n();a={next:a};a[h.Symbol.iterator]=function(){return this};return a}function r(a){n();var b=a[Symbol.iterator];return b?b.call(a):p(a)};function t(a,b){var d=a.filePath;if(0<a.messages.length&&!b[d])throw Error("No expected errors found for "+d+" but found ESLint errors.");a.messages.forEach(function(a){a.filePath=d;var c=b[d].c[a.line-1],g=a.filePath+":"+a.line+" ("+a.ruleId+") - Missing expected error";if(!c||!c.b||!c.b.includes(a.ruleId))throw Error(g);c.f.add(a.ruleId);u(b[d])})}
function u(a){var b=a.filePath;Object.keys(a.c).forEach(function(d){var c=a.c[d];if(c){var e=c.b.filter(function(a){return!c.f.has(a)});if(0<e.length)throw Error(b+":"+d+" The following rules were unused "+("by ESLint: "+e.join(", ")));}})}function v(a,b){a.forEach(function(a){t(a,b)})};var w=require("bluebird"),x=require("eslint"),y=require("fs"),z=require("glob"),A=require("path"),B=w.promisify(y.readFile),C=w.promisify(z);function D(a){var b={};a=a.map(E);return w.all(a).then(function(a){a=r(a);for(var c=a.next();!c.done;c=a.next())c=c.value,b[c.filePath]=c;return b})}function E(a){return B(a).then(function(b){return{filePath:A.resolve(a),c:F(b)}})}
function F(a){var b=a.toString().split(/\r?\n/);a={};for(var d=/\/\/ ERROR: (.*)/,c=1,b=r(b),e=b.next();!e.done;e=b.next()){var g=e.value.match(d);g&&(e=new Set,g=g[1].split(",").map(function(a){return a.trim()}),a[c]={f:e,b:g});c++}return a}function G(a,b){C(a).then(function(a){H(a,b)})}function H(a,b){D(a).then(function(d){var c=b.executeOnFiles(a).results;v(c,d)})}module.exports={};module.exports.testConfig=function(a,b){b=new x.CLIEngine(b.g);G(a,b)};
